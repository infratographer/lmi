// This code was originally generated by github.com/deepmap/oapi-codegen version v1.12.4
// However, it has been modified for it to work in a separate package with our
// additional middleware.
package httpsrv

import (
	oapimdw "github.com/deepmap/oapi-codegen/pkg/gin-middleware"
	"github.com/gin-gonic/gin"

	apiv1 "github.com/infratographer/lmi/api/v1"
	"github.com/infratographer/lmi/internal/storage"
)

// Router converts contexts to parameters.
type Router struct {
	store storage.Storage
}

// GinServerOptions provides options for the Gin server.
type GinServerOptions struct {
	ErrorHandler func(*gin.Context, error, int)
}

// NewRouter creates http.Handler with routing matching OpenAPI spec.
func NewRouter(store storage.Storage) *Router {
	rtr := &Router{
		store: store,
	}

	return rtr
}

func (rtr *Router) Routes(rg *gin.RouterGroup) {
	rg = rg.Group("/api/v1")

	swagger, err := apiv1.GetSwagger()
	// If this fails it's a bug in the code generation.
	if err != nil {
		panic(err)
	}

	rg.Use(oapimdw.OapiRequestValidator(swagger))

	rg.GET("/assignments", rtr.GetAssignments)

	rg.GET("/permissions", rtr.GetPermissions)

	rg.GET("/roles", rtr.GetRoles)

	rg.POST("/roles", rtr.CreateRole)

	rg.DELETE("/roles/:id", rtr.DeleteRole)

	rg.GET("/roles/:id", rtr.GetRole)

	rg.PUT("/roles/:id", rtr.UpdateRole)

	rg.DELETE("/roles/:id/assignments", rtr.RemoveRoleAssignment)

	rg.GET("/roles/:id/assignments", rtr.GetRoleAssignments)

	rg.POST("/roles/:id/assignments", rtr.AssignRole)

	rg.DELETE("/roles/:id/permissions", rtr.RemoveRolePermission)

	rg.GET("/roles/:id/permissions", rtr.GetRolePermissions)

	rg.POST("/roles/:id/permissions", rtr.AddRolePermission)
}
